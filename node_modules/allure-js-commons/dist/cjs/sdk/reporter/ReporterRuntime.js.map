{"version":3,"file":"ReporterRuntime.js","names":["_path","require","_model","_LifecycleState","_Notifier","_factory","_utils","_attachments","_loader","_excluded","_objectWithoutProperties","e","t","o","r","i","_objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","n","length","indexOf","propertyIsEnumerable","call","hasOwnProperty","ownKeys","keys","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classPrivateFieldInitSpec","a","_checkPrivateRedeclaration","set","has","TypeError","_classPrivateFieldGet","s","get","_assertClassBrand","_toPropertyKey","value","configurable","writable","_toPrimitive","Symbol","toPrimitive","String","Number","DefaultStepStack","constructor","Map","stepsByRoot","clear","rootsByStep","rootUuid","maybeValue","delete","stepUuid","removeStep","newValue","_handleMetadataMessage","WeakMap","_handleStepMetadataMessage","_handleStartStepMessage","_handleStopStepMessage","_handleAttachmentContentMessage","_handleAttachmentPathMessage","_findParent","_writeFixturesOfScope","_writeContainer","ReporterRuntime","_ref","_this","writer","listeners","environmentInfo","categories","links","LifecycleState","uuid","randomUuid","state","setScope","updateFunc","scope","getScope","console","error","concat","deleteScope","scopeUuid","type","fixtureResult","wrappedFixture","setFixtureResult","createFixtureResult","start","Date","now","fixtures","fixture","getFixtureResult","stop","stage","Stage","FINISHED","result","scopeUuids","undefined","testResult","createTestResult","deepClone","notifier","beforeTestResultStart","tests","setTestResult","afterTestResultStart","getTestResult","beforeTestResultUpdate","afterTestResultUpdate","_testResult$testCaseI","_testResult$historyId","beforeTestResultStop","testCaseId","getTestResultTestCaseId","historyId","getTestResultHistoryId","afterTestResultStop","testResults","labels","find","label","name","deleteTestResult","beforeTestResultWrite","writeResult","afterTestResultWrite","stepStack","currentStep","parentStepUuid","parent","JSON","stringify","stepResult","createStepResult","steps","setStepResult","addStep","step","getStepResult","beforeStepStop","afterStepStop","attachmentName","attachmentContentOrPath","options","_options$fileExtensio","isPath","fileExtension","extname","attachmentFileName","buildAttachmentFileName","contentType","writeAttachmentFromPath","writeAttachment","attachment","source","wrapInStep","timestamp","attachments","writeEnvironmentInfo","serializedCategories","map","c","messageRegex","RegExp","traceRegex","writeCategoriesDefinitions","messages","message","data","updateFixture","displayName","parameters","rest","updateTest","linkConfig","formatLinks","assign","updateStep","startStep","status","statusDetails","stopStep","Buffer","from","content","encoding","path","root","getExecutionItem","_ref2","writtenFixtures","Set","deleteFixtureResult","add","befores","afters","writeGroup","children","resolveWriter","Notifier","exports"],"sources":["../../../../src/sdk/reporter/ReporterRuntime.ts"],"sourcesContent":["/* eslint max-lines: 0 */\nimport { extname } from \"path\";\nimport {\n  type Attachment,\n  type AttachmentOptions,\n  type FixtureResult,\n  Stage,\n  type StepResult,\n  type TestResult,\n} from \"../../model.js\";\nimport type {\n  Category,\n  EnvironmentInfo,\n  RuntimeAttachmentContentMessage,\n  RuntimeAttachmentPathMessage,\n  RuntimeMessage,\n  RuntimeMetadataMessage,\n  RuntimeStartStepMessage,\n  RuntimeStepMetadataMessage,\n  RuntimeStopStepMessage,\n} from \"../types.js\";\nimport { LifecycleState } from \"./LifecycleState.js\";\nimport { Notifier } from \"./Notifier.js\";\nimport { createFixtureResult, createStepResult, createTestResult } from \"./factory.js\";\nimport type { Config, FixtureType, FixtureWrapper, LinkConfig, TestScope, Writer } from \"./types.js\";\nimport { deepClone, formatLinks, getTestResultHistoryId, getTestResultTestCaseId, randomUuid } from \"./utils.js\";\nimport { buildAttachmentFileName } from \"./utils/attachments.js\";\nimport { resolveWriter } from \"./writer/loader.js\";\n\ninterface StepStack {\n  clear(): void;\n  removeRoot(rootUuid: string): void;\n  currentStep(rootUuid: string): string | undefined;\n  addStep(rootUuid: string, stepUuid: string): void;\n  removeStep(stepUuid: string): void;\n}\n\nclass DefaultStepStack implements StepStack {\n  private stepsByRoot: Map<string, string[]> = new Map();\n  private rootsByStep: Map<string, string> = new Map();\n\n  clear = (): void => {\n    this.stepsByRoot.clear();\n    this.rootsByStep.clear();\n  };\n\n  removeRoot = (rootUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    this.stepsByRoot.delete(rootUuid);\n    if (maybeValue) {\n      maybeValue.forEach((stepUuid) => this.rootsByStep.delete(stepUuid));\n    }\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    return maybeValue[maybeValue.length - 1];\n  };\n\n  addStep = (rootUuid: string, stepUuid: string): void => {\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      this.stepsByRoot.set(rootUuid, [stepUuid]);\n    } else {\n      maybeValue.push(stepUuid);\n    }\n    this.rootsByStep.set(stepUuid, rootUuid);\n  };\n\n  removeStep(stepUuid: string) {\n    const rootUuid = this.rootsByStep.get(stepUuid);\n    if (!rootUuid) {\n      return;\n    }\n    const maybeValue = this.stepsByRoot.get(rootUuid);\n    if (!maybeValue) {\n      return;\n    }\n    const newValue = maybeValue.filter((value) => value !== stepUuid);\n    this.stepsByRoot.set(rootUuid, newValue);\n  }\n}\n\nexport class ReporterRuntime {\n  private readonly state = new LifecycleState();\n  private notifier: Notifier;\n  private stepStack: StepStack = new DefaultStepStack();\n  writer: Writer;\n  categories?: Category[];\n  environmentInfo?: EnvironmentInfo;\n  linkConfig?: LinkConfig;\n\n  constructor({ writer, listeners = [], environmentInfo, categories, links }: Config) {\n    this.writer = resolveWriter(writer);\n    this.notifier = new Notifier({ listeners });\n    this.categories = categories;\n    this.environmentInfo = environmentInfo;\n    this.linkConfig = links;\n  }\n\n  startScope = (): string => {\n    const uuid = randomUuid();\n    this.state.setScope(uuid);\n    return uuid;\n  };\n\n  updateScope = (uuid: string, updateFunc: (scope: TestScope) => void): void => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not update scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(scope);\n  };\n\n  writeScope = (uuid: string) => {\n    const scope = this.state.getScope(uuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not write scope: no scope with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.#writeFixturesOfScope(scope);\n    this.state.deleteScope(scope.uuid);\n  };\n\n  startFixture = (scopeUuid: string, type: FixtureType, fixtureResult: Partial<FixtureResult>): string | undefined => {\n    const scope = this.state.getScope(scopeUuid);\n    if (!scope) {\n      // eslint-disable-next-line no-console\n      console.error(`count not start fixture: no scope with uuid ${scopeUuid} is found`);\n      return;\n    }\n\n    const uuid = randomUuid();\n    const wrappedFixture = this.state.setFixtureResult(uuid, type, {\n      ...createFixtureResult(),\n      start: Date.now(),\n      ...fixtureResult,\n    });\n\n    scope.fixtures.push(wrappedFixture);\n    return uuid;\n  };\n\n  updateFixture = (uuid: string, updateFunc: (result: FixtureResult) => void): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(fixture);\n  };\n\n  stopFixture = (uuid: string, stop?: number): void => {\n    const fixture = this.state.getFixtureResult(uuid);\n    if (!fixture) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop fixture: no fixture with uuid ${uuid} is found`);\n      return;\n    }\n\n    fixture.stop = stop ?? Date.now();\n    fixture.stage = Stage.FINISHED;\n  };\n\n  startTest = (result: Partial<TestResult>, scopeUuids: string[] = []): string => {\n    const uuid = randomUuid();\n    const testResult: TestResult = {\n      ...createTestResult(uuid),\n      start: Date.now(),\n      ...deepClone(result),\n    };\n\n    this.notifier.beforeTestResultStart(testResult);\n\n    scopeUuids.forEach((scopeUuid) => {\n      const scope = this.state.getScope(scopeUuid);\n      if (!scope) {\n        // eslint-disable-next-line no-console\n        console.error(`count not link test to the scope: no scope with uuid ${uuid} is found`);\n        return;\n      }\n      scope.tests.push(uuid);\n    });\n\n    this.state.setTestResult(uuid, testResult);\n    this.notifier.afterTestResultStart(testResult);\n    return uuid;\n  };\n\n  updateTest = (uuid: string, updateFunc: (result: TestResult) => void): void => {\n    const testResult = this.state.getTestResult(uuid);\n\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    this.notifier.beforeTestResultUpdate(testResult);\n    updateFunc(testResult);\n    this.notifier.afterTestResultUpdate(testResult);\n  };\n\n  stopTest = (uuid: string, stop?: number) => {\n    const testResult = this.state.getTestResult(uuid);\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test result: no test with uuid ${uuid}) is found`);\n      return;\n    }\n\n    this.notifier.beforeTestResultStop(testResult);\n    testResult.testCaseId ??= getTestResultTestCaseId(testResult);\n    testResult.historyId ??= getTestResultHistoryId(testResult);\n    testResult.stop = stop ?? Date.now();\n\n    this.notifier.afterTestResultStop(testResult);\n  };\n\n  writeTest = (uuid: string) => {\n    const testResult = this.state.testResults.get(uuid);\n    if (!testResult) {\n      // eslint-disable-next-line no-console\n      console.error(`could not write test result: no test with uuid ${uuid} is found`);\n      return;\n    }\n\n    if (testResult.labels.find((label) => label.name === \"ALLURE_TESTPLAN_SKIP\")) {\n      this.state.deleteTestResult(uuid);\n      return;\n    }\n\n    this.notifier.beforeTestResultWrite(testResult);\n\n    this.writer.writeResult(testResult);\n    this.state.deleteTestResult(uuid);\n\n    this.notifier.afterTestResultWrite(testResult);\n  };\n\n  currentStep = (rootUuid: string): string | undefined => {\n    return this.stepStack.currentStep(rootUuid);\n  };\n\n  startStep = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    result: Partial<StepResult>,\n  ): string | undefined => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not start test step: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n    const stepResult: StepResult = {\n      ...createStepResult(),\n      start: Date.now(),\n      ...result,\n    };\n    parent.steps.push(stepResult);\n    const stepUuid = randomUuid();\n    this.state.setStepResult(stepUuid, stepResult);\n\n    this.stepStack.addStep(rootUuid, stepUuid);\n\n    return stepUuid;\n  };\n\n  updateStep = (uuid: string, updateFunc: (stepResult: StepResult) => void) => {\n    const step = this.state.getStepResult(uuid)!;\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not update test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    updateFunc(step);\n  };\n\n  stopStep = (uuid: string, stop?: number) => {\n    const step = this.state.getStepResult(uuid);\n    if (!step) {\n      // eslint-disable-next-line no-console\n      console.error(`could not stop test step: no step with uuid ${uuid} is found`);\n      return;\n    }\n\n    this.notifier.beforeStepStop(step);\n\n    step.stop = stop ?? Date.now();\n    step.stage = Stage.FINISHED;\n\n    this.stepStack.removeStep(uuid);\n\n    this.notifier.afterStepStop(step);\n  };\n\n  writeAttachment = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n    attachmentName: string,\n    attachmentContentOrPath: Buffer | string,\n    options: AttachmentOptions & { wrapInStep?: boolean; timestamp?: number },\n  ) => {\n    const parent = this.#findParent(rootUuid, parentStepUuid);\n    if (!parent) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `could not write test attachment: no context for root ${rootUuid} and parentStepUuid ${JSON.stringify(parentStepUuid)} is found`,\n      );\n      return;\n    }\n\n    const isPath = typeof attachmentContentOrPath === \"string\";\n    const fileExtension = options.fileExtension ?? (isPath ? extname(attachmentContentOrPath) : undefined);\n    const attachmentFileName = buildAttachmentFileName({\n      contentType: options.contentType,\n      fileExtension,\n    });\n\n    if (isPath) {\n      this.writer.writeAttachmentFromPath(attachmentFileName, attachmentContentOrPath);\n    } else {\n      this.writer.writeAttachment(attachmentFileName, attachmentContentOrPath);\n    }\n\n    const attachment: Attachment = {\n      name: attachmentName,\n      source: attachmentFileName,\n      type: options.contentType,\n    };\n\n    if (options.wrapInStep) {\n      const { timestamp = Date.now() } = options;\n      parent.steps.push({\n        name: attachmentName,\n        attachments: [attachment],\n        start: timestamp,\n        stop: timestamp,\n      } as StepResult);\n    } else {\n      parent.attachments.push(attachment);\n    }\n  };\n\n  writeEnvironmentInfo = () => {\n    if (!this.environmentInfo) {\n      return;\n    }\n\n    this.writer.writeEnvironmentInfo(this.environmentInfo);\n  };\n\n  writeCategoriesDefinitions = () => {\n    if (!this.categories) {\n      return;\n    }\n\n    const serializedCategories = this.categories.map((c) => {\n      if (c.messageRegex instanceof RegExp) {\n        c.messageRegex = c.messageRegex.source;\n      }\n\n      if (c.traceRegex instanceof RegExp) {\n        c.traceRegex = c.traceRegex.source;\n      }\n\n      return c;\n    });\n\n    this.writer.writeCategoriesDefinitions(serializedCategories);\n  };\n\n  applyRuntimeMessages = (rootUuid: string, messages: RuntimeMessage[]) => {\n    messages.forEach((message) => {\n      switch (message.type) {\n        case \"metadata\":\n          this.#handleMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_metadata\":\n          this.#handleStepMetadataMessage(rootUuid, message.data);\n          return;\n        case \"step_start\":\n          this.#handleStartStepMessage(rootUuid, message.data);\n          return;\n        case \"step_stop\":\n          this.#handleStopStepMessage(rootUuid, message.data);\n          return;\n        case \"attachment_content\":\n          this.#handleAttachmentContentMessage(rootUuid, message.data);\n          return;\n        case \"attachment_path\":\n          this.#handleAttachmentPathMessage(rootUuid, message.data);\n          return;\n        default:\n          // eslint-disable-next-line no-console\n          console.error(`could not apply runtime messages: unknown message ${JSON.stringify(message)}`);\n          return;\n      }\n    });\n  };\n\n  #handleMetadataMessage = (rootUuid: string, message: RuntimeMetadataMessage[\"data\"]) => {\n    // only display name could be set to fixture.\n    const fixtureResult = this.state.getFixtureResult(rootUuid);\n    if (fixtureResult) {\n      this.updateFixture(rootUuid, (result) => {\n        if (message.displayName) {\n          result.name = message.displayName;\n        }\n      });\n      return;\n    }\n\n    const { links, labels, parameters, displayName, ...rest } = message;\n    this.updateTest(rootUuid, (result) => {\n      if (links) {\n        result.links = [...result.links, ...(this.linkConfig ? formatLinks(this.linkConfig, links) : links)];\n      }\n      if (labels) {\n        result.labels = [...result.labels, ...labels];\n      }\n      if (parameters) {\n        result.parameters = [...result.parameters, ...parameters];\n      }\n      if (displayName) {\n        result.name = displayName;\n      }\n      Object.assign(result, rest);\n    });\n  };\n\n  #handleStepMetadataMessage = (rootUuid: string, message: RuntimeStepMetadataMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step metadata message: no step is running\");\n      return;\n    }\n    const { name, parameters } = message;\n    this.updateStep(stepUuid, (stepResult) => {\n      if (name) {\n        stepResult.name = name;\n      }\n      if (parameters) {\n        stepResult.parameters = [...stepResult.parameters, ...parameters];\n      }\n    });\n  };\n\n  #handleStartStepMessage = (rootUuid: string, message: RuntimeStartStepMessage[\"data\"]) => {\n    this.startStep(rootUuid, undefined, { ...message });\n  };\n\n  #handleStopStepMessage = (rootUuid: string, message: RuntimeStopStepMessage[\"data\"]) => {\n    const stepUuid = this.currentStep(rootUuid);\n    if (!stepUuid) {\n      // eslint-disable-next-line no-console\n      console.error(\"could not handle step stop message: no step is running\");\n      return;\n    }\n    this.updateStep(stepUuid, (result) => {\n      if (message.status && !result.status) {\n        result.status = message.status;\n      }\n      if (message.statusDetails) {\n        result.statusDetails = { ...result.statusDetails, ...message.statusDetails };\n      }\n    });\n    this.stopStep(stepUuid, message.stop);\n  };\n\n  #handleAttachmentContentMessage = (rootUuid: string, message: RuntimeAttachmentContentMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, Buffer.from(message.content, message.encoding), {\n      encoding: message.encoding,\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #handleAttachmentPathMessage = (rootUuid: string, message: RuntimeAttachmentPathMessage[\"data\"]) => {\n    this.writeAttachment(rootUuid, undefined, message.name, message.path, {\n      contentType: message.contentType,\n      fileExtension: message.fileExtension,\n      wrapInStep: message.wrapInStep,\n      timestamp: message.timestamp,\n    });\n  };\n\n  #findParent = (\n    rootUuid: string,\n    parentStepUuid: string | null | undefined,\n  ): FixtureResult | TestResult | StepResult | undefined => {\n    const root = this.state.getExecutionItem(rootUuid);\n    if (!root) {\n      return;\n    }\n\n    if (parentStepUuid === null) {\n      return root;\n    } else if (parentStepUuid === undefined) {\n      const stepUuid = this.currentStep(rootUuid);\n      return stepUuid ? this.state.getStepResult(stepUuid) : root;\n    } else {\n      return this.state.getStepResult(parentStepUuid);\n    }\n  };\n\n  #writeFixturesOfScope = ({ fixtures, tests }: TestScope) => {\n    const writtenFixtures = new Set<string>();\n    if (tests.length) {\n      for (const wrappedFixture of fixtures) {\n        if (!writtenFixtures.has(wrappedFixture.uuid)) {\n          this.#writeContainer(tests, wrappedFixture);\n          this.state.deleteFixtureResult(wrappedFixture.uuid);\n          writtenFixtures.add(wrappedFixture.uuid);\n        }\n      }\n    }\n  };\n\n  #writeContainer = (tests: string[], wrappedFixture: FixtureWrapper) => {\n    const fixture = wrappedFixture.value;\n    const befores = wrappedFixture.type === \"before\" ? [wrappedFixture.value] : [];\n    const afters = wrappedFixture.type === \"after\" ? [wrappedFixture.value] : [];\n    this.writer.writeGroup({\n      uuid: wrappedFixture.uuid,\n      name: fixture.name,\n      children: [...new Set(tests)],\n      befores,\n      afters,\n    });\n  };\n}\n"],"mappings":"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","ignoreList":[]}